// problem 2 - start 10/30

// Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

// 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...


// a b  c  d   e  f
// By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

//solution 1 - completed 10/31 at midnight - i realize this is pretty much a brute force method and there is undoubtedly a much more refined method to solve this. will attempt solving this with arrays tomorrow 

var fib = function(n)
{
	var a = 1;
	var b = 2;
	var sum = 2;
	while (a + b < n)
		{
			var a = a + b;
			var b = a + b;
			if (a % 2 === 0)
			{
				sum += a;
			}
			if (b % 2 === 0)
			{
				sum += b;
			}
		}
		console.log(sum);
}

fib(4000000);


// solution 2 - completed 10/31 12:00 pm

var fib = [1, 2];
var sum = 0;
var limit = function(n) 
{
while (fib[(fib.length) - 1] + fib[(fib.length) - 2] <= n)
{
	fib.push( fib[(fib.length) - 1] + fib[(fib.length) - 2] )

};
console.log(fib);

for (var x in fib)
{ 
	if (fib[x] % 2 === 0)
	{
		sum += fib[x];
	}
};
console.log(sum);
};

limit(4000000);
