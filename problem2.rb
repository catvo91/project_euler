# problem 2!
# fibonacci analysis. my favorite!
# https://projecteuler.net/problem=2

# Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

#1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

#By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

def fibb(x)
	fibbArray = [1, 2] #starting fibb sequence
	i = 0 # the certain index we are on in the array
	sum = 2 # some rationalization that the sum of the sequence will automatically have 2 if we start with 1
	while fibbArray[i] + fibbArray[i + 1] < x # x is the limit of the problem, 4 million here
		if (fibbArray[i] + fibbArray[i + 1]) % 2 == 0
			sum += (fibbArray[i] + fibbArray[i + 1])
		end
		fibbArray << fibbArray[i] + fibbArray[i + 1]
		i += 1
	end
	return sum
end

puts fibb(4000000)